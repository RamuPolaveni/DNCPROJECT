# Generated by Django 4.2.7 on 2025-09-03 06:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planning", "Planning"),
                            ("active", "Active"),
                            ("on_hold", "On Hold"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="planning",
                        max_length=20,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("members_only", "Members Only"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("expected_end_date", models.DateTimeField(blank=True, null=True)),
                ("actual_end_date", models.DateTimeField(blank=True, null=True)),
                ("goals", models.JSONField(default=list)),
                ("max_team_size", models.PositiveIntegerField(blank=True, null=True)),
                ("requires_approval", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("application_count", models.PositiveIntegerField(default=0)),
                ("member_count", models.PositiveIntegerField(default=0)),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="projects/covers/"
                    ),
                ),
                ("gallery", models.JSONField(default=list)),
                ("repository_url", models.URLField(blank=True, null=True)),
                ("demo_url", models.URLField(blank=True, null=True)),
                ("documentation_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "db_table": "projects",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("icon", models.CharField(blank=True, max_length=50, null=True)),
                ("color", models.CharField(default="#007bff", max_length=7)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Project Category",
                "verbose_name_plural": "Project Categories",
                "db_table": "project_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProjectMilestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                ("progress_percentage", models.PositiveIntegerField(default=0)),
                ("estimated_hours", models.PositiveIntegerField(blank=True, null=True)),
                ("actual_hours", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_milestones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        related_name="dependents",
                        to="projects.projectmilestone",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="milestones",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Milestone",
                "verbose_name_plural": "Project Milestones",
                "db_table": "project_milestones",
                "ordering": ["due_date", "priority"],
            },
        ),
        migrations.CreateModel(
            name="ProjectUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "update_type",
                    models.CharField(
                        choices=[
                            ("progress", "Progress Update"),
                            ("milestone", "Milestone Reached"),
                            ("issue", "Issue/Blocking"),
                            ("announcement", "Announcement"),
                            ("general", "General Update"),
                        ],
                        default="progress",
                        max_length=20,
                    ),
                ),
                ("attachments", models.JSONField(default=list)),
                ("likes_count", models.PositiveIntegerField(default=0)),
                ("comments_count", models.PositiveIntegerField(default=0)),
                ("is_pinned", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_updates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="projects.project",
                    ),
                ),
                (
                    "related_milestone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="projects.projectmilestone",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Update",
                "verbose_name_plural": "Project Updates",
                "db_table": "project_updates",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="project",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="projects.projectcategory",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="preferred_skills",
            field=models.ManyToManyField(
                blank=True, related_name="preferred_for_projects", to="users.skill"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="project_lead",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="led_projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="required_skills",
            field=models.ManyToManyField(
                blank=True, related_name="required_for_projects", to="users.skill"
            ),
        ),
        migrations.CreateModel(
            name="ProjectMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("lead", "Project Lead"),
                            ("developer", "Developer"),
                            ("designer", "Designer"),
                            ("analyst", "Analyst"),
                            ("tester", "Tester"),
                            ("contributor", "Contributor"),
                            ("mentor", "Mentor"),
                            ("observer", "Observer"),
                        ],
                        default="contributor",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("removed", "Removed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("responsibilities", models.TextField(blank=True, null=True)),
                (
                    "time_commitment",
                    models.CharField(
                        choices=[
                            ("part_time", "Part Time"),
                            ("full_time", "Full Time"),
                            ("volunteer", "Volunteer"),
                            ("as_needed", "As Needed"),
                        ],
                        default="volunteer",
                        max_length=20,
                    ),
                ),
                ("weekly_hours", models.PositiveIntegerField(default=0)),
                ("application_message", models.TextField(blank=True, null=True)),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("joined_at", models.DateTimeField(blank=True, null=True)),
                ("left_at", models.DateTimeField(blank=True, null=True)),
                ("contribution_score", models.PositiveIntegerField(default=0)),
                ("last_contribution", models.DateTimeField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="projects.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Member",
                "verbose_name_plural": "Project Members",
                "db_table": "project_members",
                "ordering": ["-applied_at"],
                "unique_together": {("project", "user")},
            },
        ),
        migrations.CreateModel(
            name="ProjectApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("relevant_experience", models.TextField()),
                (
                    "time_commitment",
                    models.CharField(
                        choices=[
                            ("part_time", "Part Time"),
                            ("full_time", "Full Time"),
                            ("volunteer", "Volunteer"),
                            ("as_needed", "As Needed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("weekly_hours", models.PositiveIntegerField()),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("under_review", "Under Review"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("review_notes", models.TextField(blank=True, null=True)),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="projects.project",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Project Application",
                "verbose_name_plural": "Project Applications",
                "db_table": "project_applications",
                "ordering": ["-applied_at"],
                "unique_together": {("project", "applicant")},
            },
        ),
    ]
