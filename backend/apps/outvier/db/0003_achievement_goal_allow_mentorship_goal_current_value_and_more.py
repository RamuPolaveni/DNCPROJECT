# Generated by Django 4.2.7 on 2025-09-28 20:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("outvier", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("goal_completion", "Goal Completion"),
                            ("pathway_completion", "Pathway Completion"),
                            ("milestone_reached", "Milestone Reached"),
                            ("streak_achieved", "Learning Streak"),
                            ("skill_mastered", "Skill Mastery"),
                            ("community_contributor", "Community Contributor"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("icon_name", models.CharField(default="star", max_length=50)),
                ("points_earned", models.IntegerField(default=10)),
                ("is_unlocked", models.BooleanField(default=False)),
                ("unlocked_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Achievement",
                "verbose_name_plural": "Achievements",
                "ordering": ["-unlocked_at", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="goal",
            name="allow_mentorship",
            field=models.BooleanField(
                default=True, help_text="Allow others to mentor this goal"
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="current_value",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Current progress value",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="is_public",
            field=models.BooleanField(
                default=False, help_text="Share goal with community"
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="last_activity",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="goal",
            name="related_pathway",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="outvier.growthpathway",
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="reminder_frequency",
            field=models.CharField(
                choices=[
                    ("daily", "Daily"),
                    ("weekly", "Weekly"),
                    ("monthly", "Monthly"),
                    ("none", "No Reminders"),
                ],
                default="weekly",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="status",
            field=models.CharField(
                choices=[
                    ("not_started", "Not Started"),
                    ("in_progress", "In Progress"),
                    ("on_hold", "On Hold"),
                    ("completed", "Completed"),
                    ("cancelled", "Cancelled"),
                ],
                default="not_started",
                max_length=15,
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="target_value",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Target value for measurable goals",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="time_spent",
            field=models.IntegerField(
                default=0, help_text="Total time spent in minutes"
            ),
        ),
        migrations.AddField(
            model_name="goal",
            name="unit",
            field=models.CharField(
                blank=True,
                help_text="Unit of measurement (e.g., hours, books, kg)",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="allow_collaboration",
            field=models.BooleanField(
                default=True, help_text="Allow others to join this pathway"
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="completion_rate",
            field=models.FloatField(
                default=0.0, help_text="Completion rate percentage"
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="estimated_duration",
            field=models.IntegerField(
                default=30, help_text="Estimated duration in days"
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="is_public",
            field=models.BooleanField(
                default=False, help_text="Share pathway with community"
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="last_activity",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="preferred_learning_style",
            field=models.CharField(
                choices=[
                    ("visual", "Visual"),
                    ("auditory", "Auditory"),
                    ("kinesthetic", "Hands-on"),
                    ("reading", "Reading/Writing"),
                    ("mixed", "Mixed"),
                ],
                default="mixed",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="status",
            field=models.CharField(
                choices=[
                    ("not_started", "Not Started"),
                    ("in_progress", "In Progress"),
                    ("paused", "Paused"),
                    ("completed", "Completed"),
                    ("abandoned", "Abandoned"),
                ],
                default="not_started",
                max_length=15,
            ),
        ),
        migrations.AddField(
            model_name="growthpathway",
            name="total_time_spent",
            field=models.IntegerField(
                default=0, help_text="Total time spent in minutes"
            ),
        ),
        migrations.AlterField(
            model_name="goal",
            name="goal_type",
            field=models.CharField(
                choices=[
                    ("personal", "Personal Development"),
                    ("professional", "Professional Growth"),
                    ("skill", "Skill Development"),
                    ("project", "Project Completion"),
                    ("network", "Networking"),
                    ("learning", "Learning Goal"),
                    ("fitness", "Health & Fitness"),
                    ("financial", "Financial Goal"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="growthpathway",
            name="pathway_type",
            field=models.CharField(
                choices=[
                    ("ai_ml", "AI & Machine Learning"),
                    ("devops", "DevOps & Cloud"),
                    ("web_dev", "Web Development"),
                    ("mobile_dev", "Mobile Development"),
                    ("data_science", "Data Science"),
                    ("cybersecurity", "Cybersecurity"),
                    ("digital_marketing", "Digital Marketing"),
                    ("ui_ux", "UI/UX Design"),
                    ("blockchain", "Blockchain"),
                    ("iot", "Internet of Things"),
                    ("leadership", "Leadership & Management"),
                    ("entrepreneurship", "Entrepreneurship"),
                ],
                max_length=50,
            ),
        ),
        migrations.CreateModel(
            name="PathwayStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.IntegerField()),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "step_type",
                    models.CharField(
                        choices=[
                            ("reading", "Reading Material"),
                            ("video", "Video Tutorial"),
                            ("exercise", "Practical Exercise"),
                            ("quiz", "Knowledge Check"),
                            ("project", "Project Work"),
                            ("discussion", "Community Discussion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_url", models.URLField(blank=True, null=True)),
                (
                    "estimated_duration",
                    models.IntegerField(default=30, help_text="Duration in minutes"),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("completion_notes", models.TextField(blank=True)),
                ("has_quiz", models.BooleanField(default=False)),
                (
                    "passing_score",
                    models.IntegerField(
                        default=70,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pathway",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="outvier.growthpathway",
                    ),
                ),
                (
                    "prerequisites",
                    models.ManyToManyField(blank=True, to="outvier.pathwaystep"),
                ),
            ],
            options={
                "verbose_name": "Pathway Step",
                "verbose_name_plural": "Pathway Steps",
                "ordering": ["pathway", "step_number"],
                "unique_together": {("pathway", "step_number")},
            },
        ),
        migrations.CreateModel(
            name="NotificationSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("goal_reminder", "Goal Reminder"),
                            ("goal_deadline", "Goal Deadline"),
                            ("goal_milestone", "Goal Milestone"),
                            ("pathway_reminder", "Pathway Reminder"),
                            ("pathway_step", "Pathway Step"),
                            ("achievement_unlocked", "Achievement Unlocked"),
                            ("streak_reminder", "Streak Reminder"),
                            ("streak_broken", "Streak Broken"),
                            ("match_found", "Match Found"),
                            ("insight_available", "Insight Available"),
                            ("system_update", "System Update"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title_template", models.CharField(max_length=200)),
                ("message_template", models.TextField()),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("custom", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                ("time_of_day", models.TimeField()),
                ("days_of_week", models.JSONField(blank=True, default=list)),
                ("days_of_month", models.JSONField(blank=True, default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "related_goal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="outvier.goal",
                    ),
                ),
                (
                    "related_pathway",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="outvier.growthpathway",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_schedules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Schedule",
                "verbose_name_plural": "Notification Schedules",
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("goal_reminders", models.BooleanField(default=True)),
                ("goal_deadlines", models.BooleanField(default=True)),
                ("goal_milestones", models.BooleanField(default=True)),
                ("pathway_reminders", models.BooleanField(default=True)),
                ("pathway_steps", models.BooleanField(default=True)),
                ("achievements", models.BooleanField(default=True)),
                ("streak_reminders", models.BooleanField(default=True)),
                ("streak_broken", models.BooleanField(default=True)),
                ("matches", models.BooleanField(default=True)),
                ("insights", models.BooleanField(default=True)),
                ("system_updates", models.BooleanField(default=False)),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=True)),
                ("in_app_notifications", models.BooleanField(default=True)),
                ("quiet_hours_start", models.TimeField(default="22:00")),
                ("quiet_hours_end", models.TimeField(default="08:00")),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                (
                    "reminder_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily", "Daily Digest"),
                            ("weekly", "Weekly Digest"),
                            ("custom", "Custom"),
                        ],
                        default="immediate",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Preference",
                "verbose_name_plural": "Notification Preferences",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("goal_reminder", "Goal Reminder"),
                            ("goal_deadline", "Goal Deadline"),
                            ("goal_milestone", "Goal Milestone"),
                            ("pathway_reminder", "Pathway Reminder"),
                            ("pathway_step", "Pathway Step"),
                            ("achievement_unlocked", "Achievement Unlocked"),
                            ("streak_reminder", "Streak Reminder"),
                            ("streak_broken", "Streak Broken"),
                            ("match_found", "Match Found"),
                            ("insight_available", "Insight Available"),
                            ("system_update", "System Update"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("action_url", models.URLField(blank=True, null=True)),
                ("action_text", models.CharField(blank=True, max_length=100)),
                ("scheduled_for", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "related_achievement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="outvier.achievement",
                    ),
                ),
                (
                    "related_goal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="outvier.goal",
                    ),
                ),
                (
                    "related_match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="outvier.teammatch",
                    ),
                ),
                (
                    "related_pathway",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="outvier.growthpathway",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outvier_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LearningStreak",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_streak", models.IntegerField(default=0)),
                ("longest_streak", models.IntegerField(default=0)),
                ("last_activity_date", models.DateField(blank=True, null=True)),
                ("target_streak", models.IntegerField(default=7)),
                ("streak_goal_achieved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_streaks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Learning Streak",
                "verbose_name_plural": "Learning Streaks",
            },
        ),
        migrations.AddField(
            model_name="achievement",
            name="related_goal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="outvier.goal",
            ),
        ),
        migrations.AddField(
            model_name="achievement",
            name="related_pathway",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="outvier.growthpathway",
            ),
        ),
        migrations.AddField(
            model_name="achievement",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="outvier_achievements",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="LearningProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "time_spent",
                    models.IntegerField(default=0, help_text="Time spent in minutes"),
                ),
                (
                    "quiz_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("quiz_attempts", models.IntegerField(default=0)),
                (
                    "difficulty_rating",
                    models.IntegerField(
                        blank=True,
                        help_text="1=Very Easy, 5=Very Hard",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "helpfulness_rating",
                    models.IntegerField(
                        blank=True,
                        help_text="1=Not Helpful, 5=Very Helpful",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "pathway_step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_progress",
                        to="outvier.pathwaystep",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_progress",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Learning Progress",
                "verbose_name_plural": "Learning Progress",
                "unique_together": {("user", "pathway_step")},
            },
        ),
    ]
