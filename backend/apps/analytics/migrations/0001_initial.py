# Generated by Django 4.2.7 on 2025-09-03 06:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalyticsMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("page_views", "Page Views"),
                            ("unique_visitors", "Unique Visitors"),
                            ("session_duration", "Session Duration"),
                            ("bounce_rate", "Bounce Rate"),
                            ("conversion_rate", "Conversion Rate"),
                            ("user_registrations", "User Registrations"),
                            ("active_users", "Active Users"),
                            ("social_engagement", "Social Engagement"),
                            ("revenue", "Revenue"),
                            ("mentorship_sessions", "Mentorship Sessions"),
                            ("project_contributions", "Project Contributions"),
                            ("community_engagement", "Community Engagement"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("unit", models.CharField(default="count", max_length=20)),
                (
                    "aggregation_type",
                    models.CharField(
                        choices=[
                            ("sum", "Sum"),
                            ("average", "Average"),
                            ("count", "Count"),
                            ("min", "Minimum"),
                            ("max", "Maximum"),
                        ],
                        default="sum",
                        max_length=20,
                    ),
                ),
                ("display_name", models.CharField(max_length=100)),
                ("color", models.CharField(default="#007bff", max_length=7)),
                ("icon", models.CharField(blank=True, max_length=50, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Analytics Metric",
                "verbose_name_plural": "Analytics Metrics",
                "db_table": "analytics_metrics",
                "ordering": ["metric_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("google_analytics", "Google Analytics"),
                            ("social_media", "Social Media"),
                            ("wordpress", "WordPress"),
                            ("discourse", "Discourse"),
                            ("internal", "Internal Platform"),
                            ("salesforce", "Salesforce"),
                            ("quickbooks", "QuickBooks"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("api_endpoint", models.URLField(blank=True, null=True)),
                ("api_key", models.CharField(blank=True, max_length=200, null=True)),
                ("api_secret", models.CharField(blank=True, max_length=200, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("last_sync", models.DateTimeField(blank=True, null=True)),
                ("sync_frequency", models.PositiveIntegerField(default=3600)),
                ("configuration", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Analytics Source",
                "verbose_name_plural": "Analytics Sources",
                "db_table": "analytics_sources",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("is_default", models.BooleanField(default=False)),
                ("layout_config", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_dashboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard",
                "verbose_name_plural": "Dashboards",
                "db_table": "dashboards",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("line_chart", "Line Chart"),
                            ("bar_chart", "Bar Chart"),
                            ("pie_chart", "Pie Chart"),
                            ("metric_card", "Metric Card"),
                            ("table", "Table"),
                            ("gauge", "Gauge"),
                            ("heatmap", "Heatmap"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("position_x", models.PositiveIntegerField(default=0)),
                ("position_y", models.PositiveIntegerField(default=0)),
                ("width", models.PositiveIntegerField(default=4)),
                ("height", models.PositiveIntegerField(default=3)),
                ("chart_config", models.JSONField(default=dict)),
                ("date_range", models.JSONField(default=dict)),
                ("filters", models.JSONField(default=dict)),
                ("refresh_interval", models.PositiveIntegerField(default=300)),
                ("is_visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="widgets",
                        to="analytics.dashboard",
                    ),
                ),
                (
                    "metrics",
                    models.ManyToManyField(
                        related_name="widgets", to="analytics.analyticsmetric"
                    ),
                ),
                (
                    "sources",
                    models.ManyToManyField(
                        blank=True,
                        related_name="widgets",
                        to="analytics.analyticssource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dashboard Widget",
                "verbose_name_plural": "Dashboard Widgets",
                "db_table": "dashboard_widgets",
                "ordering": ["position_y", "position_x"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("excel", "Excel"),
                            ("csv", "CSV"),
                            ("json", "JSON"),
                        ],
                        default="pdf",
                        max_length=10,
                    ),
                ),
                ("is_scheduled", models.BooleanField(default=True)),
                ("next_run", models.DateTimeField(blank=True, null=True)),
                ("last_run", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("include_charts", models.BooleanField(default=True)),
                ("include_raw_data", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "dashboards",
                    models.ManyToManyField(blank=True, to="analytics.dashboard"),
                ),
                (
                    "metrics",
                    models.ManyToManyField(blank=True, to="analytics.analyticsmetric"),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="report_recipients", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Report",
                "verbose_name_plural": "Analytics Reports",
                "db_table": "analytics_reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("page_view", "Page View"),
                            ("profile_update", "Profile Update"),
                            ("skill_added", "Skill Added"),
                            ("connection_made", "Connection Made"),
                            ("project_joined", "Project Joined"),
                            ("event_attended", "Event Attended"),
                            ("forum_post", "Forum Post"),
                            ("mentorship_session", "Mentorship Session"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("page_url", models.URLField(blank=True, null=True)),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                ("metadata", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                ("referrer", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "db_table": "user_activities",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "activity_type", "created_at"],
                        name="user_activi_user_id_de49e5_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="user_activi_created_9fa3ca_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.DecimalField(decimal_places=4, max_digits=15)),
                ("date", models.DateTimeField()),
                ("dimensions", models.JSONField(default=dict)),
                ("raw_data", models.JSONField(default=dict)),
                ("processed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "metric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="analytics.analyticsmetric",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data",
                        to="analytics.analyticssource",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Data Point",
                "verbose_name_plural": "Analytics Data",
                "db_table": "analytics_data",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["source", "metric", "date"],
                        name="analytics_d_source__bc9f16_idx",
                    ),
                    models.Index(fields=["date"], name="analytics_d_date_7c43aa_idx"),
                ],
            },
        ),
    ]
